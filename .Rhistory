second <- expand.grid(c('low', 'up'), unique(df$Section), unique(df$Casino))
concat <- function(x) paste0(x[,2], '_', x[,3], '.', x[,1])
second <- concat(second)
third <- expand.grid(c('low','up'), vincoli.names)
third <- with(third, paste(Var2, Var1, sep = "."))
help("WITH")
help(with)
View(concat)
sol <- sols$`2011-09-01`
rownames(sol$con) <- c(first, second, third)
vincoli.names <- with(df, paste(Casino,Section,MachineType,Denomination, sep="_"))
first <- c("Aries", "Libra")
second <- expand.grid(c('low', 'up'), unique(df$Section), unique(df$Casino))
concat <- function(x) paste0(x[,2], '_', x[,3], '.', x[,1])
second <- concat(second)
third <- expand.grid(c('low','up'), vincoli.names)
third <- with(third, paste(Var2, Var1, sep = "."))
sol <- sols$`2011-09-01`
rownames(sol$con) <- c(first, second, third)
# load r object with the solutions for each month
load("solutions.RData")
vincoli.names <- with(df, paste(Casino,Section,MachineType,Denomination, sep="_"))
first <- c("Aries", "Libra")
second <- expand.grid(c('low', 'up'), unique(df$Section), unique(df$Casino))
concat <- function(x) paste0(x[,2], '_', x[,3], '.', x[,1])
second <- concat(second)
third <- expand.grid(c('low','up'), vincoli.names)
third <- with(third, paste(Var2, Var1, sep = "."))
library(lubridate)
df <- df %>% filter(Month == ymd())
df <- df %>% filter(Month == ymd(2011-09-01))
library(lubridate)
library(dplyr)
df <- df %>% filter(Month == ymd(2011-09-01))
vincoli.names <- with(df, paste(Casino,Section,MachineType,Denomination, sep="_"))
first <- c("Aries", "Libra")
second <- expand.grid(c('low', 'up'), unique(df$Section), unique(df$Casino))
concat <- function(x) paste0(x[,2], '_', x[,3], '.', x[,1])
second <- concat(second)
third <- expand.grid(c('low','up'), vincoli.names)
third <- with(third, paste(Var2, Var1, sep = "."))
sol <- sols$`2011-09-01`
rownames(sol$con) <- c(first, second, third)
df <- df %>% filter(Month == ymd("2011-09-01"))
vincoli.names <- with(df, paste(Casino,Section,MachineType,Denomination, sep="_"))
first <- c("Aries", "Libra")
second <- expand.grid(c('low', 'up'), unique(df$Section), unique(df$Casino))
concat <- function(x) paste0(x[,2], '_', x[,3], '.', x[,1])
second <- concat(second)
third <- expand.grid(c('low','up'), vincoli.names)
third <- with(third, paste(Var2, Var1, sep = "."))
# load r object with the solutions for each month
load("solutions.RData")
library(lubridate)
library(dplyr)
df <- df %>% filter(Month == ymd("2011-09-01"))
vincoli.names <- with(df, paste(Casino,Section,MachineType,Denomination, sep="_"))
first <- c("Aries", "Libra")
second <- expand.grid(c('low', 'up'), unique(df$Section), unique(df$Casino))
concat <- function(x) paste0(x[,2], '_', x[,3], '.', x[,1])
second <- concat(second)
third <- expand.grid(c('low','up'), vincoli.names)
third <- with(third, paste(Var2, Var1, sep = "."))
sol <- sols$`2011-09-01`
rownames(sol$con) <- c(first, second, third)
shadow_price <- sol$con
vincolo1 <- shadow_price[1:2,]
knitr::kable(vincolo1)
vincolo2 <- shadow_price[3:18,]
knitr::kable(vincolo2)
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
View(slots_sum)
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
knitr::kable(sol$allvar)
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
View(vincolo3)
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ] %>% arrange(rownames))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ] %>% arrange(rownames(vincolo3)))
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ] %>% arrange(rownames())
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ] %>% arrange(rownames()))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3 %>% arrange(rownames)
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3 %>% arrange(rownames)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(rownames)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(rownames)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(rownames, dual, dual.reg)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(rownames, dual)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(rownames)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(dual, rownames)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(rownames, dual)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(dual, rownames)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
20*26836
46+9199
46*9199
vincolo3 <- shadow_price[19:dim(shadow_price)[1],]
vincolo3$rownames <- row.names(vincolo3)
vincolo3 <- vincolo3[c(7,1:6)]
vincolo3 <- vincolo3 %>% arrange(rownames, dual)
slots_sum <- group_by(df, Section, tipo, Casino) %>% summarise(sum = sum(numero_macchine))
knitr::kable(head(vincolo3, n = 20))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- vincolo3 %>% arrange(dual)
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- vincolo3 %>% arrange(dual)
vincolo3 <- vincolo3 %>% mutate(incremento = dual * dual.reg)
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- vincolo3 %>% mutate(incremento = dual * dual.reg)
vincolo3 <- vincolo3 %>% arrange(desc(dual.reg))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
vincolo3 <- vincolo3 %>% mutate(incremento = dual * dual.reg)
vincolo3 <- vincolo3 %>% arrange(desc(incremento))
knitr::kable(vincolo3[vincolo3$actual == vincolo3$bvec & vincolo3$dir == "<=", ])
Coef_FO <- sol$allvar
rm(Coef_FO)
coef_FO <- sol$allvar
View(coef_FO)
coef_FO <- sol$allvar
nomi <- rownames(df)
View(df)
vincoli.names
rm(nomi)
coef_FO <- sol$allvar
coef_FO$variabili <- vincoli.names
View(coef_FO)
View(coef_FO)
View(vincolo1)
154+78
156+16+2+78
coef_FO <- sol$allvar[1:78] #exclude slack variable
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
View(coef_FO)
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>% arrange(variabili)
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>% select(variabili, min.c, max.c) %>% arrange(variabili)
sol$allvar[1:78,]
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>% select(variabili, opt, min.c, max.c) %>% arrange(variabili)
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>% select(variabili, min.c, opt, max.c) %>% arrange(variabili)
sol$allvar[1:78,]
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>% select(variabili, min.c, cvec, max.c) %>% arrange(variabili)
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>%
select(variabili, min.c, cvec, max.c) %>%
arrange(variabili) %>%
mutate(incremento_max = max.c - cvec, decremento_max = cvec - min.c)
11095+9199
11095-97
summary(coef_FO$incremento_max)
summary(coef_FO$decremento_max)
ggplot2::ggplot(coef_FO, aes(x=incremento_max)) + geom_histogram
ggplot(coef_FO, aes(x=incremento_max)) +
geom_histogram()
library(lubridate)
library(dplyr)
library(ggplot2)
ggplot(coef_FO, aes(x=incremento_max)) +
geom_histogram()
ggplot(coef_FO, aes(x=incremento_max)) +
geom_histogram() +
stat_bin(bins = 30)
coef_FO[coef_FO$incremento_max == -inf,] <- 10000000
coef_FO[coef_FO$incremento_max == "-inf",] <- 10000000
View(coef_FO)
coef_FO[coef_FO$incremento_max == "inf",] <- 10000000
View(coef_FO)
coef_FO[coef_FO$incremento_max == "Inf",] <- 10000000
View(coef_FO)
ggplot(coef_FO, aes(x=incremento_max)) +
geom_histogram() +
stat_bin(bins = 30)
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>%
select(variabili, min.c, cvec, max.c) %>%
arrange(variabili) %>%
mutate(incremento_max = max.c - cvec, decremento_max = cvec - min.c, Casino =)
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>%
select(variabili, min.c, cvec, max.c) %>%
arrange(variabili) %>%
mutate(incremento_max = max.c - cvec, decremento_max = cvec - min.c, Casino =)
coef_FO <- sol$allvar[1:78,] #exclude slack variable
coef_FO$variabili <- vincoli.names
coef_FO <- coef_FO %>%
select(variabili, min.c, cvec, max.c) %>%
arrange(variabili) %>%
mutate(incremento_max = max.c - cvec, decremento_max = cvec - min.c)
boxplot(coef_FO$decremento_max)
summary(coef_FO$incremento_max)
summary(coef_FO$decremento_max)
summary(coef_FO$incremento_max)
print("")
summary(coef_FO$decremento_max)
summary(coef_FO$incremento_max)
print("/n")
summary(coef_FO$decremento_max)
summary(coef_FO$incremento_max)
summary(coef_FO$decremento_max)
cat("distribuzione incremento massimo", summary(coef_FO$incremento_max), sep = "/n")
summary(coef_FO$decremento_max)
cat("distribuzione incremento massimo", summary(coef_FO$incremento_max), "\ndistribuzione decremento massimo", summary(coef_FO$decremento_max))
cat("distribuzione incremento massimo\n")
summary(coef_FO$incremento_max)
cat("distribuzione decremento massimo\n")
summary(coef_FO$decremento_max))
cat("distribuzione incremento massimo\n")
summary(coef_FO$incremento_max)
cat("distribuzione decremento massimo\n")
summary(coef_FO$decremento_max)
>>>>>>> 56a91555b20fba80414f50c1565da1aee52fdfe3
library(dplyr)
library(lubridate)
library(funModeling)
library(ggplot2)
options(scipen = 999)
slot <- readxl::read_excel("Lucky Duck Entertainment revenue 2013.xls", na = c(".", "NA", "NaN"))
str(slot)
status = df_status(slot, print_results = F)
sort(unique(slot$Month)) #12 month
knitr::kable(status)
df <- slot %>%
group_by(Month, Casino, Section, MachineType, Denomination) %>%
summarise(numero_macchine    = sum(NoMachines),
ricavi_totali      = sum(GrossRevenue),
ricavo_unitario    = ricavi_totali/numero_macchine,
giocate_totali     = sum(Plays),
giocate_unitarie   = round(giocate_totali/numero_macchine),
ricavo_per_giocata = ricavi_totali/giocate_totali) %>%
arrange(Month, Section, MachineType, Denomination) %>%
mutate(tipo = paste0(MachineType, "_", Denomination))
head(df)
cat("Max number of categories:", nrow(df %>%
group_by(tipo) %>%
summarise(n = n())))
knitr::kable(df %>%
group_by(tipo) %>%
summarise(n = n()) %>%
select(tipo))
Casino = df %>% group_by(tipo, Casino) %>%
summarise(n = n()) %>%
arrange(Casino)
cat(c("Max number of categories for Aries:", nrow(Casino %>% filter(Casino == "Aries")),
"\nMax number of categories for Libra:", nrow(Casino %>% filter(Casino == "Libra"))))
knitr::kable(df %>% group_by(Casino, Section, Month) %>%
summarise(n = n()) %>%
arrange(Casino, Section) %>%
group_by(Casino, Section) %>%
summarise(Numero_medio_categorie = mean(n), Varianza_numero_categorie = sqrt(var(n))))
knitr::kable(df %>% group_by(Casino, Section, Month) %>%
summarise(n = n()) %>%
arrange(Casino, Section) %>%
group_by(Casino, Month) %>%
summarise(Numero_medio_categorie = mean(n), Varianza_numero_categorie = sqrt(var(n))))
tre <- df %>% select(Section, tipo, ricavo_unitario)
ggplot(data = tre, aes(x = tipo, y = ricavo_unitario, colour = Section)) +
#geom_point(alpha = .6) +
geom_jitter(alpha = .8) +
labs(x="Categoria", y="Ricavo unitario", colour = "Sezione", title = "Distribuzione dei ricavi mensili delle slot per categoria e sezione nei due casino", subtitle = "Casino") +
theme(axis.text.x = element_text(angle = 40, hjust = .8)) +
facet_wrap(~Casino)
#theme_light()
ricavi_mese = df %>%
group_by(Month) %>%
summarise(ricavo_medio_totale = mean(ricavi_totali),
ricavo_medio_unitario = mean(ricavo_unitario),
numero_macchine_medie = mean(numero_macchine),
varianza_macchine = sqrt(var(numero_macchine)))
ggplot(data=ricavi_mese, aes(x=ricavi_mese$Month, y = ricavi_mese$ricavo_medio_unitario)) +
geom_line(alpha=.5, size=1, color="#880011") +
ggtitle("Ricavi per Mese di LDE") +
labs(x="Mese", y="Ricavo medio unitario") +
theme_classic()
ricavi_mese$Month = as.factor(ricavi_mese$Month)
ggplot(data=ricavi_mese, aes(x=ricavi_mese$numero_macchine_medie,
y=ricavi_mese$ricavo_medio_totale,
colour = Month)) +
geom_point(alpha=.4, size=4) +
ggtitle("Pi? macchine hai pi? guadagni? In linea di massima SI!") +
labs(x="Numero medio macchine", y="Ricavi medi totali") +
theme_minimal()
ggplot(data=ricavi_mese, aes(x=ricavi_mese$numero_macchine_medie,
y=ricavi_mese$ricavo_medio_unitario,
colour = Month)) +
geom_point(alpha=.4, size=4) +
ggtitle("Tante macchine non significa ricavi unitari elevati!") +
labs(x="Numero medio macchine", y="Ricavi medi unitari") +
theme_minimal()
ricavi_categoria = df %>%
group_by(Denomination, MachineType) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario)) %>%
mutate(type = paste0(Denomination,sep = "_", MachineType))
ggplot(data=ricavi_categoria, aes(x=ricavi_categoria$type, y = sort(ricavi_categoria$ricavo_medio_unitario))) +
geom_bar(stat="identity", fill = "firebrick3" ) +
ggtitle("Ricavi per Categoria di LDE") +
labs(x="Categoria", y="Ricavo medio unitario") +
theme_classic()
ricavi_sezione = df %>%
group_by(Section) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario))
ggplot(data=ricavi_sezione, aes(x=ricavi_sezione$Section, y = sort(ricavi_sezione$ricavo_medio_unitario))) +
geom_bar(stat="identity", fill = "forestgreen", width = 0.4 ) +
geom_text(aes(label = round(ricavi_sezione$ricavo_medio_unitario)), nudge_y = 700 ) +
ggtitle("Ricavi per Sezione di LDE") +
labs(x="Sezione", y="Ricavo medio unitario") +
theme_classic()
ricavi_casino = df %>%
group_by(Casino) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario))
ggplot(data=ricavi_casino, aes(x=ricavi_casino$Casino, y = ricavi_casino$ricavo_medio_unitario)) +
geom_bar(stat="identity", fill = "blue", width = 0.4 ) +
geom_text(aes(label = round(ricavi_casino$ricavo_medio_unitario)), nudge_y = 700 ) +
ggtitle("Ricavi per Casino di LDE") +
labs(x="Casino", y="Ricavo medio unitario") +
theme_classic()
ggplot(data=df, aes(x=df$giocate_totali, y = df$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Pi? macchine ci sono pi? si gioca? Si") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
cat("The Correlation between 'Giocate Totali' and 'Numero Macchine' is:",cor(df$giocate_totali, df$numero_macchine))
correlazione = list()
m = sort(unique(ymd(df$Month)))
for(i in 1:12) {
month = df %>% filter(Month == m[i])
correlazione[as.character(m[i])] = cor(month$giocate_totali, month$numero_macchine)
}
correlazione
ggplot(data=df, aes(x=df$giocate_totali, y = df$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Pi? macchine ci sono pi? si gioca? Si") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
ggplot(data=df, aes(x=df$giocate_totali, y = df$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Più macchine ci sono più si gioca? Si") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
df$Casino = as.factor(df$Casino)
p = ggplot(df, aes(x=Casino, y=giocate_totali, fill = Casino)) +
geom_boxplot(outlier.shape=8) +
labs(y = "Giocate totali") +
ggtitle("Distribuzione giocate totali") +
#geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_dark()
data_summary <- function(x) {
"funzione per mettere intervallo di confidenza attorno alla media"
m = mean(x)
ymin = t.test(x)$conf.int[1]
ymax = t.test(x)$conf.int[2]
return(c(y=m,ymin=ymin,ymax=ymax))
}
p + stat_summary(fun.data = data_summary,
geom="pointrange",
color="red",
size = 0.7)
t.test(df$giocate_totali ~ df$Casino) #distribuzioni significativamente diverse: non posso usare la congiunta
p + stat_summary(fun.data = data_summary,
geom="pointrange",
color="red",
size = 0.7)
load("solutions.rdata")
ricavi.prima <- group_by(df, Month) %>% summarise(ricavi_totali = sum(ricavi_totali), tempo = "prima")
ricavi.dopo <- tibble(Month = names(sols), ricavi_totali = sapply(sols, `[[`, "opt"), tempo = "dopo")
ggplot(data = ricavi, aes(x = Month, y = ricavi_totali/10^6, fill = tempo, color = tempo)) +#, label = round(ricavi_totali/10^6, 1))) +
geom_line(size = 1.6) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.5) +
geom_point(color = "black", alpha = 0.6) +
scale_fill_discrete(name="",
breaks=c("prima", "dopo"),
labels=c("Prima", "Dopo")) +
labs(x="Mese",
y="Ricavi totali (mln)",
title = "Ricavi totali mensili prima e dopo l'ottimizzazione",
linetype = "linea") +
theme(axis.text.x = element_text(angle = 40, hjust = .8),
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
legend.text = element_text(size = 13),
title = element_text(size = 16))
load("solutions.rdata")
ricavi.prima <- group_by(df, Month) %>% summarise(ricavi_totali = sum(ricavi_totali), tempo = "prima")
ricavi.dopo <- tibble(Month = names(sols), ricavi_totali = sapply(sols, `[[`, "opt"), tempo = "dopo")
ggplot(data = ricavi, aes(x = Month, y = ricavi_totali/10^6, fill = tempo, color = tempo)) +#, label = round(ricavi_totali/10^6, 1))) +
geom_line(size = 1.6) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.5) +
geom_point(color = "black", alpha = 0.6) +
scale_fill_discrete(name="",
breaks=c("prima", "dopo"),
labels=c("Prima", "Dopo")) +
labs(x="Mese",
y="Ricavi totali (mln)",
title = "Ricavi totali mensili prima e dopo l'ottimizzazione",
linetype = "linea") +
theme(axis.text.x = element_text(angle = 40, hjust = .8),
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
legend.text = element_text(size = 13),
title = element_text(size = 16))
df$Casino = as.factor(df$Casino)
p = ggplot(df, aes(x=Casino, y=giocate_totali, fill = Casino)) +
geom_boxplot(outlier.shape=8) +
labs(y = "Giocate totali") +
ggtitle("Distribuzione giocate totali") +
#geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_dark()
data_summary <- function(x) {
"funzione per mettere intervallo di confidenza attorno alla media"
m = mean(x)
ymin = t.test(x)$conf.int[1]
ymax = t.test(x)$conf.int[2]
return(c(y=m,ymin=ymin,ymax=ymax))
}
p + stat_summary(fun.data = data_summary,
geom="pointrange",
color="red",
size = 0.7)
t.test(df$giocate_totali ~ df$Casino) #distribuzioni significativamente diverse: non posso usare la congiunta
test = list()
for(i in 1:12) {
month = df %>% filter(Month == m[i])
x = t.test(month$giocate_totali ~ month$Casino)
test[as.character(m[i])] = x$p.value
}
test
load("solutions.rdata")
ricavi.prima <- group_by(df, Month) %>% summarise(ricavi_totali = sum(ricavi_totali), tempo = "prima")
ricavi.dopo <- tibble(Month = names(sols), ricavi_totali = sapply(sols, `[[`, "opt"), tempo = "dopo")
ggplot(data = ricavi, aes(x = Month, y = ricavi_totali/10^6, fill = tempo, color = tempo)) +#, label = round(ricavi_totali/10^6, 1))) +
geom_line(size = 1.6) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.5) +
geom_point(color = "black", alpha = 0.6) +
scale_fill_discrete(name="",
breaks=c("prima", "dopo"),
labels=c("Prima", "Dopo")) +
labs(x="Mese",
y="Ricavi totali (mln)",
title = "Ricavi totali mensili prima e dopo l'ottimizzazione",
linetype = "linea") +
theme(axis.text.x = element_text(angle = 40, hjust = .8),
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
legend.text = element_text(size = 13),
title = element_text(size = 16))
